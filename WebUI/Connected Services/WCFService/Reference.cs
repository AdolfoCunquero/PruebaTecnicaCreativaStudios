//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebUI.WCFService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCustomersByCountry", ReplyAction="http://tempuri.org/IService/GetCustomersByCountryResponse")]
        WebUI.Business.WCFService.CustomerResponse[] GetCustomersByCountry(string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCustomersByCountry", ReplyAction="http://tempuri.org/IService/GetCustomersByCountryResponse")]
        System.Threading.Tasks.Task<WebUI.Business.WCFService.CustomerResponse[]> GetCustomersByCountryAsync(string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CustomerOrdersInformation", ReplyAction="http://tempuri.org/IService/CustomerOrdersInformationResponse")]
        WebUI.Business.WCFService.OrderResponse[] CustomerOrdersInformation(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CustomerOrdersInformation", ReplyAction="http://tempuri.org/IService/CustomerOrdersInformationResponse")]
        System.Threading.Tasks.Task<WebUI.Business.WCFService.OrderResponse[]> CustomerOrdersInformationAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddWebTracker", ReplyAction="http://tempuri.org/IService/AddWebTrackerResponse")]
        void AddWebTracker(WebUI.Business.WCFService.WebTrackerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddWebTracker", ReplyAction="http://tempuri.org/IService/AddWebTrackerResponse")]
        System.Threading.Tasks.Task AddWebTrackerAsync(WebUI.Business.WCFService.WebTrackerRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : WebUI.WCFService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<WebUI.WCFService.IService>, WebUI.WCFService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebUI.Business.WCFService.CustomerResponse[] GetCustomersByCountry(string country) {
            return base.Channel.GetCustomersByCountry(country);
        }
        
        public System.Threading.Tasks.Task<WebUI.Business.WCFService.CustomerResponse[]> GetCustomersByCountryAsync(string country) {
            return base.Channel.GetCustomersByCountryAsync(country);
        }
        
        public WebUI.Business.WCFService.OrderResponse[] CustomerOrdersInformation(string customerId) {
            return base.Channel.CustomerOrdersInformation(customerId);
        }
        
        public System.Threading.Tasks.Task<WebUI.Business.WCFService.OrderResponse[]> CustomerOrdersInformationAsync(string customerId) {
            return base.Channel.CustomerOrdersInformationAsync(customerId);
        }
        
        public void AddWebTracker(WebUI.Business.WCFService.WebTrackerRequest request) {
            base.Channel.AddWebTracker(request);
        }
        
        public System.Threading.Tasks.Task AddWebTrackerAsync(WebUI.Business.WCFService.WebTrackerRequest request) {
            return base.Channel.AddWebTrackerAsync(request);
        }
    }
}
